"""empty message

Revision ID: 1e25fef777e5
Revises: 6fc0c3486cdd
Create Date: 2023-08-07 13:13:37.641279

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1e25fef777e5'
down_revision = '6fc0c3486cdd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects_collaborators',
    sa.Column('users_id', sa.Integer(), nullable=False),
    sa.Column('projects_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['projects_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('users_id', 'projects_id')
    )
    op.drop_table('projects_Collaborators')
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_constraint('projects_user_id_fkey', type_='foreignkey')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('projects_user_id_fkey', 'users', ['user_id'], ['id'])

    op.create_table('projects_Collaborators',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"projects_Collaborators_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='projects_Collaborators_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='projects_Collaborators_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_Collaborators_pkey')
    )
    op.drop_table('projects_collaborators')
    # ### end Alembic commands ###
